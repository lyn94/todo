{"version":3,"sources":["components/todo/TodoForm.js","components/todo/TodoItem.js","components/todo/TodoList.js","components/todo/Todo.js","App.js","index.js"],"names":["TodoForm","onAdd","textRef","useRef","useState","text","setText","className","onSubmit","e","preventDefault","current","focus","type","value","onChange","target","ref","TodoItem","todos","onDel","onToggle","no","done","onClick","TodoList","map","Todo","id","setTodos","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAoCeA,EAjCE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAETC,EAAUC,iBAAO,IAEvB,EAA0BC,mBAAS,IAAnC,mBAAQC,EAAR,KAAcC,EAAd,KAqBA,OACI,uBAAMC,UAAU,gBAAgBC,SAdnB,SAACC,GAEdA,EAAEC,iBAGEL,IAGJJ,EAAMI,GACNC,EAAQ,IACRJ,EAAQS,QAAQC,UAIhB,UACI,uBAAOC,KAAK,OAAOC,MAAOT,EAAMU,SApBtB,SAACN,GACf,IAAQK,EAAUL,EAAEO,OAAZF,MACRR,EAASQ,IAkBgDG,IAAKf,IAC1D,wBAAQW,KAAK,SAAb,mB,eCdGK,EAdE,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrBC,EAAmBH,EAAnBG,GAAIjB,EAAec,EAAfd,KAAMkB,EAASJ,EAATI,KAClB,OACI,qBAAIhB,UAAWgB,EAAO,WAAa,SAAnC,UACI,uBAAOV,KAAK,WAAWW,QAAS,kBAAMH,EAASC,MAC/C,uBAAOE,QAAS,kBAAMH,EAASC,MAC/B,6BAAKjB,IACL,wBAAQmB,QAAS,kBAAIJ,EAAME,IAA3B,SAAgC,cAAC,IAAD,UCI7BG,EAVE,SAAC,GAA8B,IAA7BN,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC7B,OACI,oBAAId,UAAU,WAAd,SAEQY,EAAMO,KAAK,SAAAP,GAAK,OAAI,cAAC,EAAD,CAAyBA,MAAOA,EAAOC,MAAOA,EAAOC,SAAUA,GAAhDF,EAAMG,UC+B1CK,EAlCF,WACT,IAAML,EAAKnB,iBAAO,GAClB,EAA4BC,mBAAS,CACjC,CAACwB,GAAG,EAAGvB,KAAM,4DAAgBkB,MAAK,KADtC,mBAAQJ,EAAR,KAAeU,EAAf,KAuBA,OACI,sBAAKtB,UAAU,OAAf,UACI,8CACA,cAAC,EAAD,CAAUN,MAtBJ,SAACI,GACXwB,EAAS,GAAD,mBACDV,GADC,CAEJ,CACIG,GAAGA,EAAGX,UACNN,OACAkB,MAAK,SAiBT,cAAC,EAAD,CAAUJ,MAAOA,EAAOC,MAZlB,SAACE,GACXO,EAASV,EAAMW,QAAQ,SAAAX,GAAK,OAAIA,EAAMG,KAAOA,OAWHD,SAR7B,SAACC,GACdO,EAAUV,EAAMO,KAAK,SAAAP,GAAK,OAAIA,EAAMG,KAAOA,EAAb,2BAAsBH,GAAtB,IAA6BI,MAAMJ,EAAMI,OAAMJ,aCftEY,G,MARH,WACV,OACE,8BACE,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a4f68d4.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './TodoForm.css'\r\n\r\nconst TodoForm = ({onAdd}) => {\r\n    //submit 후에포커싱을 위한\r\n    const textRef = useRef('')\r\n    //글자 입력시 상태값 변화\r\n    const [ text, setText ] = useState('')\r\n\r\n    // 텍스트를 input에 입력하면 상태 값이 변화\r\n    const inputText = (e) => {\r\n        const { value } = e.target\r\n        setText( value )\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        // 새로고침되는것막기\r\n        e.preventDefault()\r\n        \r\n        //아무것도 쓰지않으면 추가가 안됨\r\n        if(!text) return\r\n\r\n        //내용추가-setText값이초깃값('')으로변화-커서가깜빡임\r\n        onAdd(text)\r\n        setText('')\r\n        textRef.current.focus()\r\n    }\r\n\r\n    return (\r\n        <form className=\"TodoForm mt20\" onSubmit={onSubmit}>\r\n            <input type=\"text\" value={text} onChange={inputText} ref={textRef} />\r\n            <button type=\"submit\">+</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\nconst TodoItem = ({todos, onDel, onToggle}) => {\r\n    const { no, text, done } = todos\r\n    return (\r\n        <li className={done ? 'complete' : 'notyet'} >\r\n            <input type=\"checkbox\" onClick={() => onToggle(no)} />\r\n            <label onClick={() => onToggle(no)}></label>\r\n            <em>{text}</em>\r\n            <button onClick={()=>onDel(no)}><AiOutlineClose /></button>\r\n        </li>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport './TodoList.css'\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({todos, onDel, onToggle}) => {\r\n    return (\r\n        <ul className=\"TodoList\">\r\n            {\r\n                todos.map( todos => <TodoItem key={todos.no} todos={todos} onDel={onDel} onToggle={onToggle} />)\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useRef, useState } from 'react';\r\nimport './Todo.css'\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst Todo = () => {\r\n    const no = useRef(2)\r\n    const [ todos, setTodos ] = useState([\r\n        {id:1, text: '할 일을 입력해주세요.', done:false}\r\n    ])\r\n    //TodoForm에서 작성하면 내용을 추가\r\n    const onAdd = (text) => {\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                no:no.current++,\r\n                text,\r\n                done:false\r\n            }\r\n        ])\r\n    }\r\n\r\n    const onDel = (no) => {\r\n        setTodos(todos.filter( todos => todos.no !== no))\r\n    }\r\n\r\n    const onToggle = (no) => {\r\n        setTodos( todos.map( todos => todos.no === no ? {...todos, done:!todos.done}:todos))\r\n    }\r\n\r\n    return (\r\n        <div className=\"Todo\">\r\n            <h1>Add new Task</h1>\r\n            <TodoForm onAdd={onAdd} />\r\n            <TodoList todos={todos} onDel={onDel} onToggle={onToggle}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\nimport Todo from './components/todo/Todo';\nimport './utils/css/reset.css'\n\nconst App = () => {\n  return (\n    <div>\n      <Todo />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}